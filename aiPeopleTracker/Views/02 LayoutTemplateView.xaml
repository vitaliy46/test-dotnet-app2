<UserControl x:Class="aiPeopleTracker.Views.LayoutTemplateView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resources="http://ainerics.schemas.com/resources"
             xmlns:player="clr-namespace:aiPeopleTracker.Wpf.Controls.Players;assembly=aiPeopleTracker.Wpf.Controls"
             xmlns:ctrls="clr-namespace:aiPeopleTracker.Wpf.Controls;assembly=aiPeopleTracker.Wpf.Controls"
             xmlns:domain="clr-namespace:aiPeopleTracker.Business.Api.Constants;assembly=aiPeopleTracker.Business.Api"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <x:Static Member="resources:ExportResourcesDictionary.Instance"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="80px"/>
            <RowDefinition Height="40px"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!-- сетки -->
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="60"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0"  Orientation="Horizontal">

                <TextBlock FontWeight="DemiBold"  Margin="10">Название сетки. 3х3<Image Height="9" Margin="0 -20 0 0"  Source="{StaticResource GridWithFailedCamerasMarker}"></Image></TextBlock>
                <TextBlock Margin="10">Название сетки. 2х3</TextBlock>
                <TextBlock Margin="10">Название сетки. 3х3</TextBlock>
                <TextBlock Margin="10">Название сетки. 4х4<Image Height="9" Margin="0 -20 0 0"  Source="{StaticResource GridWithFailedCamerasMarker}"></Image></TextBlock>
                <TextBlock Margin="10">Название сетки. 4х4</TextBlock>
                <TextBlock Margin="10">Название сетки. 8х8<Image Height="9" Margin="0 -20 0 0"  Source="{StaticResource GridWithFailedCamerasMarker}"></Image></TextBlock>
                <TextBlock Margin="10">Название сетки. 3х3</TextBlock>
                <TextBlock Margin="10">Название сетки, которое может быть длинным. 2х2</TextBlock>

            </StackPanel>

            <Image Grid.Column="1" Width="20"  Height="20" Margin="15 0 25 0"  Source="{StaticResource Hamburger}"></Image>

        </Grid>
        

        <!-- камеры -->
        <ItemsControl Grid.Row="1" Grid.Column="0" Background="LightGray" ItemsSource="{Binding Path=PlayersContexts}" Name="gridCameras">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <player:FileMediaPlayerWithMarkers DataContext="{Binding}" 
                                            Stretch="{Binding Path=Stretch}" BorderBrush="White" BorderThickness="1" State="{Binding Path=State, Mode=TwoWay}" 
                                            SourceFileName="{Binding Path=Source}" CurrentPosition="{Binding Path=Position}"
                                            VideoOpened="Player_VideoOpened" DoubleClick="Player_DoubleClick"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding Path=LayoutTemplate.ItemsX}" Rows="{Binding Path=LayoutTemplate.ItemsY}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        
        <Grid Grid.Row="2" Grid.Column="0" Background="{StaticResource ButtonBackground}">
         <!--   <ctrls:TimeLine x:Name="timeLine" TimeLineValueChanged="TimeLine_TimeLineValueChanged">
                <ctrls:TimeLine.Style>
                    <Style TargetType="ctrls:TimeLine">
                        <Setter Property="IsTimeLineAvailable" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=CommonState}" Value="{x:Static domain:PlayerState.Stopped}">
                                <Setter Property="IsTimeLineAvailable" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ctrls:TimeLine.Style>
            </ctrls:TimeLine> -->
            <ctrls:TimeLine x:Name="timeLine" TimeLineValueChanged="TimeLine_TimeLineValueChanged">
                <ctrls:TimeLine.Style>
                    <Style TargetType="ctrls:TimeLine">
                        <Setter Property="IsTimeLineAvailable" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=CommonState}" Value="{x:Static domain:PlayerState.Stopped}">
                                <Setter Property="IsTimeLineAvailable" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ctrls:TimeLine.Style>
            </ctrls:TimeLine>
        </Grid>

        <Grid Grid.Row="3" Grid.Column="0" Background="{StaticResource GrayBrush}">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <WrapPanel x:Name="LeftWrapPanel" Grid.Row="0" Grid.Column="0" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">

                <Button Margin="5 5 5 5" MinWidth="100px" MinHeight="30px" Style="{StaticResource ButtonFlatStyle}" Content="Архив"></Button>

                <DatePicker x:Name="DatePicker" IsDropDownOpen="True" SelectedDateFormat="Short" IsEnabled="False" MinWidth="100px" MinHeight="30px" Margin="5 5 5 5" />

            </WrapPanel>

            <WrapPanel x:Name="CentralWrapPanel" Grid.Row="0" Grid.Column="1" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">

                <Button x:Name="BtnPrevious" Margin="5 5 2 5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Previous}" Margin="5" />
                </Button>

                <Button x:Name="BtnNext" Margin="2 5 10 5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Next}" Margin="5" />
                </Button>

                <Button x:Name="btnPlay" Margin="5 5 5 5" HorizontalAlignment="Center" Click="btnPlay_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=CommonState}" Value="{x:Static domain:PlayerState.Stopped}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=CommonState}" Value="{x:Static domain:PlayerState.Paused}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Play}" Margin="5"/>
                </Button>

                <Button x:Name="btnStop" Margin="5 5 5 5" HorizontalAlignment="Center" Click="btnStop_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=CommonState}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Stop}" Margin="5"/>
                </Button>

                <Button x:Name="BtnRewind" Margin="10 5 2 5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Rewind}" Margin="5" />
                </Button>

                <Button x:Name="BtnForward" Margin="2 5 5 5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Forward}" Margin="5" />
                </Button>

            </WrapPanel>

            <WrapPanel x:Name="RightWrapPanel" Grid.Row="0" Grid.Column="2" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center">
                <ctrls:Slider x:Name="SldTimelineScale" Minimum="0" Maximum="100" MinWidth="150" Margin="5 5 15 5"/>
            </WrapPanel>
            
        </Grid>
    </Grid>
</UserControl>
