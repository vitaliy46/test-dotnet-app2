<UserControl x:Class="aiPeopleTracker.Views.CameraView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:resources="http://ainerics.schemas.com/resources"
             xmlns:player="clr-namespace:aiPeopleTracker.Wpf.Controls.Players;assembly=aiPeopleTracker.Wpf.Controls"
             xmlns:ctrls="clr-namespace:aiPeopleTracker.Wpf.Controls;assembly=aiPeopleTracker.Wpf.Controls"
             xmlns:local="clr-namespace:aiPeopleTracker.Views"
             xmlns:domain="clr-namespace:aiPeopleTracker.Business.Api.Constants;assembly=aiPeopleTracker.Business.Api"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <x:Static Member="resources:ExportResourcesDictionary.Instance"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="80px"/>
            <RowDefinition Height="40px"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Margin="10 20 10 20">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2.5*"/>
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <Canvas Name="pnlPlayer" Grid.Row="0" Grid.Column="0" Background="Transparent" Panel.ZIndex="3" 
                    Cursor="Cross"
                    MouseEnter="PnlPlayer_MouseEnter"
                    MouseLeftButtonDown="PnlPlayer_MouseLeftButtonDown"
                    MouseLeftButtonUp="PnlPlayer_MouseLeftButtonUp"
                    MouseMove="PnlPlayer_MouseMove"/>
            <player:FileMediaPlayer x:Name="player" DataContext="{Binding Path=PlayerContext}"  Panel.ZIndex="2"
                                          Grid.Row="0" Grid.Column="0"
                                        Stretch="{Binding Path=Stretch}" State="{Binding Path=State, Mode=TwoWay}" SourceFileName="{Binding Path=Source}"
                                        IsScalingEnabled="True" IsBottomPanelVisible="True"
                                        VideoOpened="Player_VideoOpened"/>
          

            <DockPanel x:Name="pnlControls" Grid.Row="0" Grid.Column="1">
                <!-- -->
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ctrls:FloorControl Grid.Row="0" VerticalContentAlignment="Stretch" Loaded="FloorControl_Loaded" />
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Content="Определить лица" Margin="5 5 5 5" HorizontalAlignment="Left" MinWidth="130" MinHeight="40" Click="Button_Recognize_Click">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Stopped}">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Paused}">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                        <Button x:Name="button_tracking" Grid.Column="1" Content="Выделить" Margin="5 5 5 5" HorizontalAlignment="Left" MinWidth="180" MinHeight="40" Click="Button_tracking_Click">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Stopped}">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Paused}">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    </Grid>
                </Grid>
            </DockPanel>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="0" Background="{StaticResource ButtonBackground}">
            <ctrls:TimeLine x:Name="timeLine" TimeLineValueChanged="TimeLine_TimeLineValueChanged">
                <ctrls:TimeLine.Style>
                    <Style TargetType="ctrls:TimeLine">
                        <Setter Property="IsTimeLineAvailable" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Stopped}">
                                <Setter Property="IsTimeLineAvailable" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ctrls:TimeLine.Style>
            </ctrls:TimeLine>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="0" Background="{StaticResource GrayBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="266"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <WrapPanel x:Name="LeftWrapPanel" Grid.Row="0" Grid.Column="0" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">

                <Button Margin="5 5 5 5" MinWidth="100px" MinHeight="30px" Style="{StaticResource ButtonFlatStyle}" Content="Архив"></Button>

                <DatePicker x:Name="DatePicker" IsDropDownOpen="True" SelectedDateFormat="Short" IsEnabled="False" MinWidth="100px" MinHeight="30px" Margin="5 5 5 5" />

            </WrapPanel>

            <WrapPanel x:Name="CentralWrapPanel" Grid.Row="0" Grid.Column="1" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">

                <Button x:Name="BtnPrevious" Margin="5 5 2 5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Previous}" Margin="5" />
                </Button>

                <Button x:Name="BtnNext" Margin="2 5 10 5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Next}" Margin="5" />
                </Button>

                <Button x:Name="btnPlay" Margin="5 5 5 5" HorizontalAlignment="Center" Click="btnPlay_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Stopped}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Paused}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Play}" Margin="5" />
                </Button>

                <Button x:Name="btnStop" Margin="5 5 5 5" HorizontalAlignment="Center" Click="btnStop_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Stop}" Margin="5" />
                </Button>
                
                <Button x:Name="BtnRewind" Margin="10 5 2 5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Rewind}" Margin="5" />
                </Button>

                <Button x:Name="BtnForward" Margin="2 5 5 5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource Forward}" Margin="5" />
                </Button>

                <Button x:Name="BtnFullScreen" Margin="10 5 5 5">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                    <Setter Property="Visibility"  Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Source="{StaticResource FullScreen}" Margin="0" />
                </Button>

            </WrapPanel>

            <WrapPanel x:Name="RightWrapPanel" Grid.Row="0" Grid.Column="2" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center">
                <ctrls:Slider x:Name="SldTimelineScale" Minimum="0" Maximum="100" MinWidth="150" Margin="5 5 15 5"/>
            </WrapPanel>

            <!--<Button x:Name="btnPlay" Grid.Row="0" Grid.Column="1" Margin="5" HorizontalAlignment="Center" Click="btnPlay_Click">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Stopped}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Paused}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="{StaticResource Play}" Margin="5" />
            </Button>

            <Button x:Name="btnStop" Grid.Row="0" Grid.Column="1" Margin="5" HorizontalAlignment="Center" Click="btnStop_Click">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonFlatStyle}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=PlayerContext.State}" Value="{x:Static domain:PlayerState.Playing}">
                                <Setter Property="Visibility"  Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="{StaticResource Stop}" Margin="5" />
            </Button>-->

        </Grid>
    </Grid>
</UserControl>